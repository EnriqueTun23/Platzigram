¿Qué método debe sobrescribirse en una vista que hereda de FormView para enviar un e-mail antes de salvar el formulario?
    R= [form_valid]

¿Cómo se puede acceder a los datos de una petición POST en Django?
    R= A travez del atributo methos de una instancia del objecto HttpRequest
    R2 = A través del atributo POST de una instancia del objeto HttpResponse el cual regresa una estructura similar a un diccionario de Python

¿Qué son las vistas basadas en clases?
    R = [Son vistas que heredan de clases que implementan funcionalidad común entre las aplicaciones web y que exponen atributos a sus hijos para facilitar su uso]

¿Qué es un modelo proxy?
    R= **Aquél que hereda de una clase que define los campos base para poder extenderlos con nuevos datos
    R2 =Aquel que usa una relación de llave foránea para extender los datos de otro modelo
    R3 = Aquel que duplica otra clase para poder extender el modelo nuevo a gusto
    R4 = *Aquel que usa una relación Uno a Uno para extender los datos de otro modelo

Si quisiéramos validar dos campos de un formulario que dependen entre sí, ¿qué método deberíamos usar para lograrlo?
    R= [Sobreescribir el método clean, usar los valores de cleaned_data y aplicar las validaciones]

¿Qué problema resuelve Django?
    R= [La creación de un proyecto web con múltiples especificaciones como: interacción constante con una base de datos y manejo de peticiones HTTP.]

¿Qué es un patrón de diseño?
    R= Es el Model View Controller (MVC) o el Model Template View (MTV)
    R2= Es una forma de ordenar los archivos de una aplicación
    R3 = * Es la forma que adopta la infraestructura que corre un proyecto
    R4 = Es una solución común a un problema particular.

¿Cómo se agregan validaciones adicionales a un campo de un formulario?
    R= [Sobreescribiendo el método clean_field_name]

¿Por qué es importante utilizar entornos virtuales? 
    R= [Porque nos ayuda a prevenir conflictos entre las múltiples bibliotecas y versiones de bibliotecas que los proyectos de nuestra computadora pueden usar.]

Si se tuviera una plataforma con donde el username principal de los usuarios es el email. ¿De qué manera se debería diseñar el modelo?
    R= [A través de una clase que extienda de AbstractBaseUser y redefiniendo la variable USERNAME_FIELD]

¿Qué es una vista?
    R= [Es el código llamado por la URL después de hacer el match del recurso solicitado y contiene toda la lógica para generar una respuesta HTTP con las operaciones necesarias como traer datos de la DB y pasarlos a un template para su presentación.]

¿Qué es un middleware?
    R= [Es un sistema de plugins de bajo nivel que permite alterar la entrada o salida de Django a través del procesamiento de una petición HTTP]

¿Qué es una migración?
    R= [Definen el estado de una base de datos a través del tiempo, pueden depender de migraciones pasadas y listan las operaciones que se deben realizar en la base de datos para obtener el estado que representan. Las migraciones son creadas con el comando ]

Si deseamos consultar la lista de usuarios que se han creado dentro de los últimos 10 días, ¿Qué sentencia resuelve mejor el problema?
    R= [User.objects.filter(created__gte=ten_days_ago)]

¿Con qué bases de datos funciona el ORM de Django?
    R= [El ORM está hecho para trabajar con bases de datos de tipo relacionar y por default puede trabajar con motores como: PostgreSQL, MySQL, SQLite3 y Oracle]

¿Qué son los templates de Django?
    R= [Es la forma en la que Django permite escribir la lógica de presentación de los datos dentro de HTML usando una sintaxis especial.]

¿Qué es el dashboard de administración de Django?
    R= *Es una aplicación que Django incluye durante la instalación que nos permite administrar la estructura de las tablas de un proyecto
    R2= **Es un módulo de Python que incluye código HTML para poder cambiar las propiedades de una tabla de una base de datos así como registrar nuevas tablas y se instala agregando el string 
    R3 = Es una aplicación que Django incluye durante la instalación que nos permite administrar la estructura de las tablas de un proyecto
    R4 = Es una aplicación escrita por la comunidad de Python y Django que se instala por separado e incluye una interfaz gráfica hecha con Bootstrap para poder administrar los datos de los modelos de un proyecto

¿Cómo es que Django nos permite interactuar con los datos originales de una petición HTTP?
    R=[ A través de una instancia de la clase HttpRequest que es pasada en cada vista como uno de los argumentos.]

¿Cómo se modifican, crean o alteran las tablas la base de datos que usa el proyecto de Django?
    R= [A través de la definición de clases de Python que representan una tabla de la base de datos relacional y propiedades de la clase que representan los campos de dicha tabla.]

¿Cómo se debe crear un entorno virtual en Python3 >= 3.4?
    R= [python3 -m venv ENV_NAME]

¿Cuál es la diferencia entre las utilidades de django-admin y las de manage.py? 
    R=  [nos permite acceder a operaciones de Django para la línea de comandos y  manage.py  nos permite acceder a las mismas operaciones pero todos los comandos son específicos al proyecto que contiene el archivo.]

¿Qué concepto define mejor una aplicación en Django?
    R= [Es un módulo de Python que incluye código encargado resolver la funcionalidad de un área específica de un proyecto, por ejemplo: las vistas, las URLs, las pruebas y los modelos que únicamente están relacionados a las publicaciones de los usuarios de un proyecto como Platzigram]

¿Qué hace la variable DEBUG dentro del archivo settings.py?
    R= [Define el entorno en el que el proyecto está corriendo. Cuando DEBUG es True se agregan otras utilidades al servidor de desarrollo que nos facilitan hacer debugging]

¿De qué nos sirven los path converters y cuál es la diferencia con usar expresiones regulares?
    R=[Los path converters hacen uso de una sintaxis especial para validar el tipo de datos pasados en las URLs y son diferentes a una expresión regular porque son más legibles y regresan el tipo de dato de Python listo para ser usado.]

¿Cuál es la mejor manera de crear un usuario?
    R= [User.objects.create_user(username=username, password=password)]

¿Cuál es el rol de Django en los formularios?
R= **Mostrar de manera ordenada los elementos HTML de un formulario a través de una sintaxis especial en los templates
R2= Inyectar clases a los elementos HTML para que los formularios presenten elementos diferentes durante su presentación al usuario
R3 = Proveer un conjunto de clases y utilidades que facilitan la validación y manejo de datos provenientes de un formulario HTML
R4 = * Proteger todas las peticiones entrantes contra ataques como Cross Site Scripting o SQL Injection

¿Qué es el MTV y qué significa?
R= [El MTV es el patrón de diseño adoptado por Django para la construcción de aplicaciones web. Define que durante el creación de un sitio el modelo será el encargado de estructurar los datos y controlar su acceso, el template será el encargado de contener toda la lógica para mostrar los datos y la vista la conexión entre estos dos encargado de procesar la petición, traer los datos y pasárselos al template.]
